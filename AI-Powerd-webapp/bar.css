:root {
    --r-pad: 6em;
    --b: calc(var(--r-pad) / 3);
    --w-rng: calc(0.125 * var(--b));
  }
  
  :root {
    --p: 0;
  }
  
  @property --p {
    syntax: "<integer>";
    initial-value: 0;
    inherits: true;
  }
  
  html,
  body {
    display: flex;
  }
  
  html {
    height: 100%;
  }
  
  body {
    align-items: center;
    justify-content: space-around;
    background: #222;
  }
  
  .loader {
    --p: 0;
    display: grid;
    place-content: center;
    transform: scale(0.5);
    clip-path: circle(49%);
    animation: p 10s steps(100) infinite;
    color: hsl(calc(var(--p) * 2), 100%, 65%);
  }
  
  .loader:before,
  .loader:after {
    grid-row: 1;
    grid-column: 1;
  }
  
  .loader:before {
    --slice: calc(360deg / var(--n));
    --s-gap: calc(var(--f) * var(--slice));
    --solid: calc((1 - var(--f)) * var(--slice));
    
    border: solid var(--b) transparent;
    padding: var(--r-pad);
    border-radius: 50%;
    box-shadow: inset 0 0 0 calc(2 * var(--w-rng)) currentcolor;
    background: repeating-conic-gradient(
      from calc(0.5 * var(--s-gap)),
      currentcolor 0% var(--solid),
      transparent 0% var(--slice)
    ) border-box;
    filter: blur(0.5px);
    --mask: conic-gradient(
        red 0% calc(var(--p) * 1%),
        rgba(255, 0, 0, 0.3) 0%
      ),
      linear-gradient(red, red) border-box,
      radial-gradient(
        red 0% calc(var(--r-pad) - 2 * var(--w-rng)),
        transparent calc(var(--r-pad) - 2 * var(--w-rng) + 1px) calc(var(--r-pad) - var(--w-rng) - 1px),
        red calc(var(--r-pad) - var(--w-rng)) calc(var(--r-pad) + 1px),
        transparent calc(var(--r-pad) + 2px)
      );
    -webkit-mask: var(--mask);
    -webkit-mask-composite: source-in, source-out;
    content: "";
  }
  
  .loader:after {
    place-self: center;
    counter-reset: p var(--p);
    font: calc(0.625 * var(--r-pad)) consolas, monaco, ubuntu mono, monospace;
    content: counter(p) "%";
  }
  
  @keyframes p {
    90%,
    100% {
      --p: 100;
    }
  }
  